#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Wire.h>
#include <TroykaMeteoSensor.h>
#include <Barometer.h>

const char *ssid = "your-ssid";
const char *password = "your-password";

TroykaMeteoSensor meteoSensor;
Barometer barometer;

ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  meteoSensor.begin();
  barometer.begin();

  // Define HTTP endpoints
  server.on("/", HTTP_GET, handleRoot);
  server.begin();
}

void loop() {
  server.handleClient();

  int stateSensor = meteoSensor.read();

  // Your existing sensor readings code goes here...

  delay(5000);
}

void handleRoot() {
  String html = "<html><body>";
  html += "<h1>Sensor Readings</h1>";

  // Append SHT31 and LPS25HB readings to the HTML response
  html += "<p>Temperature (SHT31): " + String(meteoSensor.getTemperatureC()) + "°C</p>";
  html += "<p>Humidity (SHT31): " + String(meteoSensor.getHumidity()) + "%</p>";
  html += "<p>Pressure (LPS25HB): " + String(barometer.readPressureMillimetersHg()) + " mmHg</p>";
  html += "<p>Altitude (LPS25HB): " + String(barometer.readAltitude()) + " meters</p>";
  html += "<p>Temperature (LPS25HB): " + String(barometer.readTemperatureC()) + "°C</p>";

  html += "</body></html>";

  server.send(200, "text/html", html);
}
